@page
@using SimWeb.Pages
@model SimulationModel
@{
    ViewData["Title"] = "Simulation page";
}
<style>
    .map {
        grid-template-columns: max-content repeat(8, max-content);
        grid-template-rows: repeat(6, 1fr) max-content;
    }
</style>
<style>
    :root {
        --dark-color: @(Model.CurrentRound % 4 < 2 ? "#040D12" : "#727D73");
        --middle-color: @(Model.CurrentRound % 4 < 2 ? "#183D3D" : "#AAB99A");
        --accent-color: @(Model.CurrentRound % 4 < 2 ? "#5C8374" : "#D0DDD0");
        --light-color: @(Model.CurrentRound % 4 < 2 ? "#345B63" : "#F0F0D7");
    }
</style>

<div class="page">
    <div class="arrows">
        <div class="upArrow">
            <form method="post" asp-page-handler="Up">
                <button type="submit" id="UpButtonW">W</button>
                @Html.AntiForgeryToken()
            </form>
        </div>
        <div class="threeArrows">
            <form method="post" asp-page-handler="Left">
                <button type="submit" id="LeftButtonA">A</button>
                @Html.AntiForgeryToken()
            </form>
            <form method="post" asp-page-handler="Down">
                <button type="submit" id="DownButtonS">S</button>
                @Html.AntiForgeryToken()
            </form>            
            <form method="post" asp-page-handler="Right">
                <button type="submit" id="RightButtonD">D</button>
                @Html.AntiForgeryToken()
            </form>
        </div>
    </div>

    <div class="mapContainer">
        <div class="map-header">
            <div class="turn @(Model.CurrentRound % 4 < 2 ? "dark-header" : "light-header")">
                Tura @Model.CurrentTurn
            </div>
            <div class="round @(Model.CurrentRound % 4 < 2 ? "dark-header" : "light-header")">
                Runda @Model.CurrentRound
            </div>
            @* <div class="creature @(Model.CurrentRound % 4 < 2 ? "dark-header" : "light-header")"> *@
            @*     Obecna postać: @Model.CurrentCreature *@
            @* </div> *@
        </div>

        <div class="map @(Model.CurrentRound % 4 < 2 ? "dark-map" : "light-map")">
            @for (int row = 5; row >= 0; row--)
            {
                <p>@row</p>
                @foreach (var cell in Model.MapGrid[row])
                {
                    <div>
                        @if (cell.Creatures != null && cell.Creatures.Any())
                        {
                            @Html.Raw(Model.GetImageSource(cell.Creatures))
                        }
                        else
                        {
                            <div></div>
                            <style>
                                .map {
                                    display: grid;
                                    grid-template-columns: max-content repeat(8, max-content);
                                    grid-template-rows: repeat(6, 1fr) max-content;
                                    max-width: 800px; /* Ustaw maksymalną szerokość */
                                    max-height: 600px; /* Ustaw maksymalną wysokość */
                                    margin: 0 auto; /* Wyśrodkuj grid */
                                }
                            </style>
                        }
                    </div>
                }
            }

            <!-- Grid for columns -->
            <span></span>
            @for (int i = 0; i < 8; i++)
            {
                <span>@i</span>
            }
        </div>
    </div>


    <div class="arrows">
        <div class="upArrow">
            <form method="post" asp-page-handler="Up">
                <button type="submit" id="UpButton">&uarr;</button>
                @Html.AntiForgeryToken()
            </form>
        </div>
        <div class="threeArrows">
            <form method="post" asp-page-handler="Left">
                <button type="submit" id="LeftButton">&larr;</button>
                @Html.AntiForgeryToken()
            </form>
            <form method="post" asp-page-handler="Down">
                <button type="submit" id="DownButton">&darr;</button>
                @Html.AntiForgeryToken()
            </form>
            <form method="post" asp-page-handler="Right">
                <button type="submit" id="RightButton">&rarr;</button>
                @Html.AntiForgeryToken()
            </form>

        </div>
    </div>
</div>

<div class="logger">
    <h4>Wydarzenia</h4>
    <ul style="list-style: none; padding: 0;">
        @foreach (var log in Model.EventLog)
        {
            <li>@log</li>
        }
    </ul>
</div>
<div class="order">
    <h4>Kolejność ruchów</h4>
    <ul style="list-style: none; padding: 0;">
    <li>Ork</li>
    <li>Elf</li>
    <li>Rabbits/Skeleon</li>
    <li>Eagle/Vampire</li>
    <li>Ostrich/Zombie</li>
    </ul>
</div>
<script>
    document.addEventListener('keydown', function(event) {
        if (event.key === 'ArrowRight') {
            document.getElementById('RightButton').click();
        } else if (event.key === 'ArrowLeft') {
            document.getElementById('LeftButton').click();
        } else if (event.key === 'ArrowUp') {
            document.getElementById('UpButton').click();
        } else if (event.key === 'ArrowDown') {
            document.getElementById('DownButton').click();
        }
    });
</script>
<script>
    document.addEventListener('keydown', function(event) {
        if (event.key === 'd') {
            document.getElementById('RightButtonD').click();
        } else if (event.key === 'a') {
            document.getElementById('LeftButtonA').click();
        } else if (event.key === 'w') {
            document.getElementById('UpButtonW').click();
        } else if (event.key === 's') {
            document.getElementById('DownButtonS').click();
        }
    });
</script>